//
// Generated file, do not edit! Created by opp_msgc 4.3 from src/EdgeNode/OBS_BurstSenderInfo.msg.
//

#ifndef _OBS_BURSTSENDERINFO_M_H_
#define _OBS_BURSTSENDERINFO_M_H_

#include <omnetpp.h>

// opp_msgc version check
#define MSGC_VERSION 0x0403
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgc: 'make clean' should help.
#endif



/**
 * Class generated from <tt>src/EdgeNode/OBS_BurstSenderInfo.msg</tt> by opp_msgc.
 * <pre>
 * class OBS_BurstSenderInfo
 * {
 *       int burstId = -1; 
 *       int burstifierId = -1; 
 *       int numSeq = -1; 
 *       int slowChannel = -1; 
 *       int fastChannel = -1; 
 *       string destNetworkAddr; 
 *       string srcNetworkAddr; 
 *       
 *       
 * }
 * </pre>
 */
class OBS_BurstSenderInfo : public ::cObject
{
  protected:
    int burstId_var;
    int burstifierId_var;
    int numSeq_var;
    int slowChannel_var;
    int fastChannel_var;
    opp_string destNetworkAddr_var;
    opp_string srcNetworkAddr_var;

  private:
    void copy(const OBS_BurstSenderInfo& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const OBS_BurstSenderInfo&);

  public:
    OBS_BurstSenderInfo();
    OBS_BurstSenderInfo(const OBS_BurstSenderInfo& other);
    virtual ~OBS_BurstSenderInfo();
    OBS_BurstSenderInfo& operator=(const OBS_BurstSenderInfo& other);
    virtual OBS_BurstSenderInfo *dup() const {return new OBS_BurstSenderInfo(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual int getBurstId() const;
    virtual void setBurstId(int burstId);
    virtual int getBurstifierId() const;
    virtual void setBurstifierId(int burstifierId);
    virtual int getNumSeq() const;
    virtual void setNumSeq(int numSeq);
    virtual int getSlowChannel() const;
    virtual void setSlowChannel(int slowChannel);
    virtual int getFastChannel() const;
    virtual void setFastChannel(int fastChannel);
    virtual const char * getDestNetworkAddr() const;
    virtual void setDestNetworkAddr(const char * destNetworkAddr);
    virtual const char * getSrcNetworkAddr() const;
    virtual void setSrcNetworkAddr(const char * srcNetworkAddr);
};

inline void doPacking(cCommBuffer *b, OBS_BurstSenderInfo& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, OBS_BurstSenderInfo& obj) {obj.parsimUnpack(b);}


#endif // _OBS_BURSTSENDERINFO_M_H_
