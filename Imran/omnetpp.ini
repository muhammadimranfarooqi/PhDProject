[General]
sim-time-limit = 0.1s
tkenv-plugin-path = ../../../etc/plugins
**.result-recording-modes = all
**.scalar-recording = true
#**.channel**.vector-recording = true
#**.vector-recording = false
**.vector-recording = true





[Config SwitchedDuplexLAN]
description = "Test EthernetHost Configuration"
network = Test
**.host1.**.destAddress = "host2"
**.host2.**.destAddress = "host1"
**.cli.sendInterval = exponential(10ms)


[Config TestHosts]
description = "Test Hosts"
network = TestHosts


**.numUdpApps = 1
#**.mac.address = "auto"

**.udpApp[*].startTime= 0s
**.udpApp[*].stopTime = -1s
      

**.udpApp[*].typename = "UDPBasicBurst"
**.udpApp[*].chooseDestAddrMode = "perSend"
**.udpApp[*].burstDuration = 100us
**.udpApp[*].sleepDuration = 10us

#**.udpApp[*].typename = "UDPBasicApp"
**.udpApp[0].localPort = 100
**.udpApp[0].destPort = 100
**.udpApp[0].messageLength =  1215B
**.udpApp[0].sendInterval = 1us
**.host[{0..10}].udpApp[0].destAddresses = "hostr"

**.hostr.udpApp[0].destAddresses = ""


[Config TestToR]
description = "Test ToR Node"
network = TestToR

# ARP configuration
**.networkLayer.proxyARP = true
**.arp.retryTimeout = 1s
**.arp.retryCount = 3
**.arp.cacheTimeout = 100s

# NIC configuration
**.ppp[*].queueType = "DropTailQueue"
**.ppp[*].queue.frameCapacity = 10


**.numhosts = 4
**.numUdpApps = 1
**.udpApp[*].typename = "UDPBasicApp"
**.udpApp[0].localPort = 100
**.udpApp[0].destPort = 100
**.udpApp[0].messageLength =  1400B
**.udpApp[0].sendInterval = exponential(0.1s)
//**.host5.udpApp[0].destAddresses = moduleListByNedType("inet.nodes.inet.StandardHost")

**.host5.udpApp[0].destAddresses = "host6"
**.host2.udpApp[0].destAddresses = "host5"


#**.udpApp[0].chooseDestAddrMode = "perBurst"
#**.udpApp[0].startTime = 1s
#**.udpApp[0].stopTime = 10000s
#**.udpApp[0].delayLimit = 3s
**.outColours = ""
**.numFileBurstifiers = 0
**.numPacketBurstifiers = 0
**.dataRate = 10e9bps
**.lambdasEdge = 1
**.num*Lambdas = 1

**.dispatcherRules = ""

#
# Burst Sender Configuration
#
**.sender.maxSchedBurstSize = 0
**.sender.maxSchedBurstElems = 0
**.sender.guardTime = 0.0000001s # Include a small value (for example, transmission time for 1 bit of data)
**.sender.BCPSize = 125B
**.sender.testing = false

#
# Burstifier settings
#
#**.packetBurstifier[*].destLabel = 0
**.packetBurstifier[*].timeout = 10ms #1 burst per second
**.packetBurstifier[*].maxSize = 450000000B
**.packetBurstifier[*].numPackets = 5000
**.packetBurstifier[*].minOffset = 0.001s
**.packetBurstifier[*].maxOffset = 0.01s
**.packetBurstifier[*].minSizeWithPadding = 8B
**.packetBurstifier[*].overflowLastPacket = true
**.packetBurstifier[*].cteHeader = 812B
**.packetBurstifier[*].varHeader = 18B

#
# Optical Monitor settings
#
**.monitor.reportFile = "dataTest.dat"


[Config TestStandardHost]
description = "Test Standard Host Configuration"
network = TestStandardHost
**.numhosts = 5
**.numUdpApps = 1
**.udpApp[*].typename = "UDPBasicApp"
**.udpApp[0].localPort = 100
**.udpApp[0].destPort = 100
**.udpApp[0].messageLength = exponential(1500B)
**.udpApp[0].sendInterval = exponential(0.1s)
**.host[*].udpApp[0].destAddresses = moduleListByNedType("inet.nodes.inet.StandardHost")
#**.udpApp[0].chooseDestAddrMode = "perBurst"
#**.udpApp[0].startTime = 1s
#**.udpApp[0].stopTime = 10000s
#**.udpApp[0].delayLimit = 3s


[Config TestProjectOBS]
description = "Test OBS Network"
network = TestProjectOBS
**.numUdpApps = 1
**.udpApp[*].typename = "UDPBasicApp"
**.udpApp[0].localPort = 100
**.udpApp[0].destPort = 100
**.udpApp[0].messageLength = exponential(65000B)
**.udpApp[0].sendInterval = exponential(0.1s)
**.destAddresses = moduleListByNedType("inet.nodes.inet.StandardHost")

**.lambdasEdge1 = 2
**.lambdasEdge2 = 2

**.lambdasCore = 2


**.packetBurstifier[0].destLabel = 1
**.packetBurstifier[1].destLabel = 2
**.packetBurstifier[2].destLabel = 3
**.packetBurstifier[3].destLabel = 4


**.scalar-recording = false
**.dataRate = 10Gbps	#Optical channel data rate = 10Gb per lambda

**.edge1.outColours = "3 6"
**.edge2.outColours = "9 12"

**.core1.inputColours = "3 6 | 9 12"
**.core1.outputColours = "3 6 | 9 12"

**.core1.lambdasPerInPort = "2 2" #This values should be the same that the values registered in lambdasEdge* and lambdasCore* 
**.core1.lambdasPerOutPort = "2 2"

**.numFileBurstifiers = 0
**.numPacketBurstifiers = 4
**.packetBurstifier[*].timeout = 0.005s
**.packetBurstifier[*].maxSize = 125000000B
**.packetBurstifier[*].numPackets = 1
**.packetBurstifier[*].minOffset = 0.00001s
**.packetBurstifier[*].maxOffset = 0.00002s
**.packetBurstifier[*].minSizeWithPadding = 8B
**.packetBurstifier[*].overflowLastPacket = true
**.packetBurstifier[*].cteHeader = 8B
**.packetBurstifier[*].varHeader = 1B

**.sender.BCPSize = 16B # BCP size
**.sender.maxSchedBurstSize = 0 #maximum size (bits) of Sender's scheduled burst queue (0 = infinite queue)
**.sender.maxSchedBurstElems = 0 #maximum number of queued bursts (0 = infinite)
**.sender.testing = false # If true, the module doesn't try to register to Edge Node's interface table. Used for debugging purposes only

**.OEConversionDelay = 0
**.EOConversionDelay = 0
**.BCPProcessingDelay = 0

#Guard time
**.sender.guardTime = 0.000000001s
**.guardTime = 0.000000001s


# TCP/IP Config
#==============================

# ip settings
**.ip.procDelay = 0

# ARP configuration
**.arp.cacheTimeout = 100s

# Ethernet NIC configuration
**.eth[*].mac.txrate = 1e10bps	

# Queues
**.ppp[*].queue.frameCapacity = 10000000000000	
**.eth[*].queue.frameCapacity = 1000000000







[Config TestEdge]
description = "Test Edge Node"
network = TestEdge
**.numUdpApps = 1
**.udpApp[*].typename = "UDPBasicApp"
**.udpApp[0].localPort = 100
**.udpApp[0].destPort = 100
**.udpApp[0].messageLength = exponential(65000B)
**.udpApp[0].sendInterval = exponential(0.1s)
**.destAddresses = moduleListByNedType("inet.nodes.inet.StandardHost")

**.lambdasEdge1 = 1


**.packetBurstifier[0].destLabel = 1
**.packetBurstifier[1].destLabel = 2
**.packetBurstifier[2].destLabel = 3
**.packetBurstifier[3].destLabel = 4


**.scalar-recording = false
**.dataRate = 10Gbps	#Optical channel data rate = 10Gb per lambda

**.edge1.outColours = "1 1"

**.numFileBurstifiers = 0
**.numPacketBurstifiers = 4
**.packetBurstifier[*].timeout = 0.005s
**.packetBurstifier[*].maxSize = 125000000B
**.packetBurstifier[*].numPackets = 1
**.packetBurstifier[*].minOffset = 0.00001s
**.packetBurstifier[*].maxOffset = 0.00002s
**.packetBurstifier[*].minSizeWithPadding = 8B
**.packetBurstifier[*].overflowLastPacket = true
**.packetBurstifier[*].cteHeader = 8B
**.packetBurstifier[*].varHeader = 1B

**.sender.BCPSize = 16B # BCP size
**.sender.maxSchedBurstSize = 0 #maximum size (bits) of Sender's scheduled burst queue (0 = infinite queue)
**.sender.maxSchedBurstElems = 0 #maximum number of queued bursts (0 = infinite)
**.sender.testing = false # If true, the module doesn't try to register to Edge Node's interface table. Used for debugging purposes only

**.OEConversionDelay = 0
**.EOConversionDelay = 0
**.BCPProcessingDelay = 0

#Guard time
**.sender.guardTime = 0.000000001s
**.guardTime = 0.000000001s


# TCP/IP Config
#==============================

# ip settings
**.ip.procDelay = 0

# ARP configuration
**.arp.cacheTimeout = 100s

# Ethernet NIC configuration
**.eth[*].mac.txrate = 1e10bps	

# Queues
**.ppp[*].queue.frameCapacity = 10000000000000	
**.eth[*].queue.frameCapacity = 1000000000
