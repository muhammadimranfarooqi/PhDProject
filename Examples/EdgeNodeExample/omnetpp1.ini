[General]
sim-time-limit = 0.1s	# Simulation length (in simtime)
tkenv-plugin-path = ../../INET/Etc/plugins
**.vector-recording = false
**.scalar-recording = true
**.result-recording-modes = all
#debug-on-errors = true
#user-interface=Cmdenv
#record-eventlog = true


[Config SimpleNetwork]
network = EdgeNodeExample
**.dataRate = 10000000000bps 	#Optical channel data rate = 1Gb per lambda
# Burstifier configuration (the same parameters for all)
#===================================================================
**.numPacketBurstifiers = 9
**.packetBurstifier[*].timeout = 1ms #exponential(10us)
**.packetBurstifier[*].maxSize = 40000000B
**.**.packetBurstifier[*].numPackets = 0
**.packetBurstifier[*].overflowLastPacket = true
**.packetBurstifier[*].cteHeader = 0B
**.packetBurstifier[*].varHeader = 7B
# Burst Sender configuration
#===============================
**.sender.BCPSize = 16B # BCP size
**.sender.maxSchedBurstSize = 0 #maximum size (bits) of Sender's scheduled burst queue (0 = infinite queue)
**.sender.maxSchedBurstElems = 0 #maximum number of queued bursts (0 = infinite)
**.sender.testing = false # If true, the module doesn't try to register to Edge Node's interface table. Used for debugging purposes only

**.numberofracks=10

**.numChannelFastSwitch=5 
**.numChannelSlowSwitch=5 
      
**.switchTimeSlowSwitch=0.0001s 
**.switchTimeFastSwitch=0.00001s
**.processingTime = 0.000001s


 
#Guard time
**.guardTime = 0.000001s

#Host application configuration
#==============================
# udp app (on)

**.numUdpApps = 1
**.mac.address = "auto"

#**.udpApp[*].typename = "UDPBasicBurst"
#**.udpApp[*].chooseDestAddrMode = "perBurst"
#**.udpApp[*].burstDuration = exponential (0.01s)
#**.udpApp[*].sleepDuration = exponential (0s)


**.udpApp[*].typename = "UDPBasicApp"
**.queue.frameCapacity = 10000


**.maxmessageLength = 1435B
**.scheduler.timeout = 1ms
**.scheduler.sendInterval = 2us

**.*host*.udpApp[*].messageLength = uniform(1100B,1400B)#1400B #
**.*host*.udpApp[*].sendInterval = exponential(2us) #exponential(${interarrival = 10,4,2,1.5,1}us) # # # exponential(1us)#5us #  #exponential(1us)#5us #


**.*host*.udpApp[*].localPort = 1000
**.*host*.udpApp[*].destPort = 1000



**.network1host*.udpApp[*].destAddresses = moduleListByPath("**.network{2..10}host*")
**.network2host*.udpApp[*].destAddresses = moduleListByPath("**.network1host*","**.network{3..10}host*")
**.network3host*.udpApp[*].destAddresses = moduleListByPath("**.network{1..2}host*","**.network{4..10}host*")
**.network4host*.udpApp[*].destAddresses = moduleListByPath("**.network{1..3}host*","**.network{5..10}host*")
**.network5host*.udpApp[*].destAddresses = moduleListByPath("**.network{1..4}host*","**.network{6..10}host*")
**.network6host*.udpApp[*].destAddresses = moduleListByPath("**.network{1..5}host*","**.network{7..10}host*")
**.network7host*.udpApp[*].destAddresses = moduleListByPath("**.network{1..6}host*","**.network{8..10}host*")
**.network8host*.udpApp[*].destAddresses = moduleListByPath("**.network{1..7}host*","**.network{9..10}host*")
**.network9host*.udpApp[*].destAddresses = moduleListByPath("**.network{1..8}host*","**.network10host*")
**.network10host*.udpApp[*].destAddresses = moduleListByPath("**.network{1..9}host*")




